<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://visual-computing-2022-2.github.io/Talleres/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visual-computing-2022-2.github.io/Talleres/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://visual-computing-2022-2.github.io/Talleres/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://visual-computing-2022-2.github.io/Talleres/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://visual-computing-2022-2.github.io/Talleres/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://visual-computing-2022-2.github.io/Talleres/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/masking/masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/masking/masking/</guid><description>Masking # Kernel histogram # Problem Statement # Image histogram # Problem Statement # Implement Image histogram visualization.
Background # The histogram of a digital image depicts how the intensities of its pixels are distributed. It is the discrete function h such that
\[ h(x) = n_i \] where \(n_i \) is the number of pixels with intensity \(i \) .
Histograms are used to quickly analyze the composition of an image, it can be used in RGB composition, gray scale, brightness or the system that best suits our needs.</description></item><item><title/><link>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/frisensLazyShadow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/frisensLazyShadow/</guid><description> Frisén’s Lazy Shadow #</description></item><item><title/><link>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/jastrowIllusion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/jastrowIllusion/</guid><description> Jastrow Illusion #</description></item><item><title/><link>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/kinegramScanimation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/kinegramScanimation/</guid><description> Kinegram (“Scanimation”) #</description></item><item><title/><link>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/steppingFeetMotionIllusion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visual-computing-2022-2.github.io/Talleres/docs/Workshop/workshop_1/visual_ilussion/steppingFeetMotionIllusion/</guid><description> “Stepping feet” Motion Illusion #</description></item></channel></rss>